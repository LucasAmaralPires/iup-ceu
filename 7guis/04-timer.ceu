^["@/iup/iup.ceu"]

spawn {

    val glabel = iup.label("Elapsed Time: ")

    val gauge = iup.gauge()
        iup.set(gauge, :NAME, "GAUGE");    
        iup.set(gauge, :MIN, ".1");
        iup.set(gauge, :MAX, "30");
        iup.set(gauge, :VALUE, "30");
        iup.set(gauge, :EXPAND, "HORIZONTAL");
        iup.set(gauge, :SHOWTEXT, "NO");

    val label = iup.label("0.0s")
        iup.set(label, :NAME, "LABEL");
        iup.set(label, :EXPAND, "HORIZONTAL");

    val vlable = iup.label("Duration: ")

    val iupval = iup.val("HORIZONTAL")
        iup.set(iupval, :EXPAND, "HORIZONTAL");
        iup.set(iupval, :NAME, "VAL");
        iup.set(iupval, :MAX, "60.0");
        iup.set(iupval, :STEP, ".1");
        iup.set(iupval, :VALUE, "30.0");
        iup.set(iupval, :PAGESTEP, ".5");

    val button = iup.button("Reset")
        iup.set(button, "EXPAND", "HORIZONTAL");
        iup.set(button, "NAME", "BUTTON");

    val hbox1 = iup.hbox()
        iup.append(hbox1, glabel)
        iup.append(hbox1, gauge)
        iup.set(hbox1, :MARGIN, "0x0")
        iup.set(hbox1, :ALIGNMENT, "ACENTER")

    val hbox2 = iup.hbox()
        iup.append(hbox2, vlable)
        iup.append(hbox2, iupval)
        iup.set(hbox2, :MARGIN, "0x0")
        iup.set(hbox2, :ALIGNMENT, "ACENTER")

    val vbox = iup.vbox()
        iup.append(vbox,hbox1)
        iup.append(vbox,label)
        iup.append(vbox,hbox2)
        iup.append(vbox,button)
        iup.set(vbox, :MARGIN, "10x10")
        iup.set(vbox, :GAP, "10")

    val dlg = iup.dialog(vbox)
        iup.set(dlg, :TITLE, "Timer")
        iup.set(dlg, :SIZE, "200")
;;        iup.set(dlg, :TIMER, timer)

    iup.show-xy(dlg, `:number IUP_CENTER`, `:number IUP_CENTER`)

    var timer = [false, 0] 

    loop {
        par-or {
            await :Iup.Value | it.h==iupval {
                val value = iup.get.number(iupval, :VALUE)

                iup.set(gauge, :MAX, value)

                if timer[1] < (value*10) {
                    set timer[0] = true
                } else {
                    iup.set(gauge, :VALUE, iup.get.pointer(gauge, :MAX))
                }
                println(value)
            }
        } with {
            await :Iup.Action | it.h==button {
                set timer[0] = true
                set timer[1] = 0
                iup.set(iupval, :VALUE, "30")
            }
        } with {
            await <100:ms>
            if timer[0] == true {
                val value = iup.get.number(iupval, :VALUE)
                set timer[1] = timer[1] + 1
                if timer[1] > (value*10) {
                    set timer[0] = false
                    iup.set(label, :TITLE, value)
                    iup.set(gauge, :VALUE, value)
                } else {
                    iup.set(label, :TITLE, timer[1]/10)
                    iup.set(gauge, :VALUE, timer[1]/10)
                }  
            }
        }
    }

}

iup.loop()