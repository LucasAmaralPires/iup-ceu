^["iup.ceu"]

iup-open()

func valid-date?(day, month, year) {
    var leap? = (year%400==0) or ((year%4==0) and (year%100/=0))
    ifs {
        (day < 1) -> 0
        ((month==2) and      leap?  and (day>29)) -> 0
        ((month==2) and (not leap?) and (day>28)) -> 0
        ((day>30) and ((month==4) or (month==6) or (month==9) or (month==11))) -> 0
        ((day>31) and ((month==1) or (month==3) or (month==5) or (month==7) or
                       (month==8) or (month==10) or (month==12))) -> 0
        else -> 1
    }
}

```:pre
int parse_date (char* date, int* day, int* month, int* year) {
    char *part, *ret;
    int count = 1;

    part = strtok(date, ".");
    if (part == NULL) {
        return 0;
    }

    while (part != NULL)
    {
        int len = strlen(part);
        switch (count)
        {
            case 1:
                if (strlen(part) > 2) {
                    return 0;
                }
                *day = strtol(part, &ret, 10);
                if (*ret != '\0') {
                    return 0;
                }
                break;
            case 2:
                if (strlen(part) > 2) {
                    return 0;
                }
                *month = strtol(part, &ret, 10);
                if (*ret != '\0') {
                    return 0;
                }
                break;
            case 3:
                if (strlen(part) != 4) {
                    return 0;
                }
                *year = strtol(part, &ret, 10);
                if (*ret != '\0') {
                    return 0;
                }
                break;
            default:
                return 0;
        }
        count++;
        part = strtok(NULL, ".");
    }

    return (count == 4);
}
```

spawn {
    var list = iup-list()
        iup-set(list, :EXPAND,   "HORIZONTAL")
        iup-set(list, :DROPDOWN, true)
        iup-set(list, :1,        "one-way flight")
        iup-set(list, :2,        "return flight")
        iup-set(list, :VALUE,    :1)

    var start = iup-text()
        iup-set(start, :EXPAND, "HORIZONTAL")
        iup-set(start, :VALID,  true)
        iup-set(start, :VALUE,  "22.09.1957")
        iup-set(start, :DAY,    "22")
        iup-set(start, :MONTH,  "09")
        iup-set(start, :YEAR,   "1957")

    var end = iup-text()
        iup-set(end, :EXPAND, "HORIZONTAL")
        iup-set(end, :VALID,  true)
        iup-set(end, :VALUE,  "22.09.1957")
        iup-set(end, :DAY,    "22")
        iup-set(end, :MONTH,  "09")
        iup-set(end, :YEAR,   "1957")
        iup-set(end, :ACTIVE, false)

    var button = iup-button("Book")
        iup-set(button, :EXPAND, false)
        iup-set(button, :EXPAND, "HORIZONTAL")

    var vbox = iup-vbox()
        iup-set(vbox, :MARGIN, "10x10")
        iup-set(vbox, :GAP, "10")
        iup-append(vbox, list)
        iup-append(vbox, start)
        iup-append(vbox, end)
        iup-append(vbox, button)

    var dlg = iup-dialog(vbox)
        iup-set(dlg, :TITLE, "Book Flight")

    iup-show-xy(dlg, `:number IUP_CENTER`, `:number IUP_CENTER`)

    while true {
        var act2? = iup-get-bool(end, :ACTIVE)
        var val2? = iup-get-bool(end, :VALID)

        iup-set(end, :BGCOLOR, color) where {
            var color = ((val2? or (not act2?)) and "255 255 255") or "255 0 0"
        }

        paror {
            await evt-obj?(list) and evt.state
            iup-set(end, :ACTIVE, (evt.item == 2))
        } with {
            await evt-obj?(start) or evt-obj?(end)
            var date  = iup-get-pointer(evt.obj, :VALUE)
            var year  = 0
            var month = 0
            var day   = 0
            var ok    = false
            ```
                int year  = $year.Number;
                int month = $month.Number;
                int day   = $day.Number;
                $ok.Bool = parse_date($date.Pointer, &day, &month, &year);
                $year.Number  = year;
                $month.Number = month;
                $day.Number   = day;
            ```
            if ok and valid-date?(day,month,year) {
                iup-set(evt.obj, :VALID, false)
            } else {
                iup-set(evt.obj, :DAY,   day);
                iup-set(evt.obj, :MONTH, month);
                iup-set(evt.obj, :YEAR,  year);
                iup-set(evt.obj, :VALID, true);
            }
        }
    }
}

iup-loop()
iup-close()
